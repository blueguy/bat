create table if not exists processed (package text, version text, filename text, origin text, checksum text, downloadurl text);
create index processed_index on processed(package, version);
create index processed_checksum on processed(checksum);
create index processed_origin on processed(origin);
create table if not exists processed_file (package text, version text, pathname text, checksum text, filename text, thirdparty boolean);
create index processedfile_package_checksum_index on processed_file(checksum, package);
create index processedfile_package_version_index on processed_file(package, version);
create index processedfile_filename_index on processed_file(filename);
create table if not exists extracted_string (stringidentifier text, checksum text, language text, linenumber int);
create index stringidentifier_index on extracted_string(stringidentifier,language);
create index extracted_hash_index on extracted_string(checksum);
create index extracted_language_index on extracted_string(language);
create table if not exists extracted_function (checksum text, functionname text, language text, linenumber int);
create index function_index on extracted_function(checksum);
create index functionname_index on extracted_function(functionname);
create index functionname_language on extracted_function(language);
create table if not exists extracted_name (checksum text, name text, type text, language text, linenumber int);
create index name_checksum_index on extracted_name(checksum);
create index name_name_index on extracted_name(name);
create index name_type_index on extracted_name(type);
create index name_language_index on extracted_name(language);
create table if not exists kernel_configuration(configstring text, filename text, version text);
create index kernel_configuration_filename on kernel_configuration(filename);
create table if not exists kernelmodule_alias(checksum text, modulename text, alias text);
create table if not exists kernelmodule_author(checksum text, modulename text, author text);
create table if not exists kernelmodule_description(checksum text, modulename text, description text);
create table if not exists kernelmodule_firmware(checksum text, modulename text, firmware text);
create table if not exists kernelmodule_license(checksum text, modulename text, license text);
create table if not exists kernelmodule_parameter(checksum text, modulename text, paramname text, paramtype text);
create table if not exists kernelmodule_parameter_description(checksum text, modulename text, paramname text, description text);
create table if not exists kernelmodule_version(checksum text, modulename text, version text);
create index kernelmodule_alias_index on kernelmodule_alias(alias);
create index kernelmodule_author_index on kernelmodule_author(author);
create index kernelmodule_description_index on kernelmodule_description(description);
create index kernelmodule_firmware_index on kernelmodule_firmware(firmware);
create index kernelmodule_license_index on kernelmodule_license(license);
create index kernelmodule_parameter_index on kernelmodule_parameter(paramname);
create index kernelmodule_parameter_description_index on kernelmodule_parameter_description(description);
create index kernelmodule_version_index on kernelmodule_version(version);
create index kernelmodule_alias_checksum_index on kernelmodule_alias(checksum);
create index kernelmodule_author_checksum_index on kernelmodule_author(checksum);
create index kernelmodule_description_checksum_index on kernelmodule_description(checksum);
create index kernelmodule_firmware_checksum_index on kernelmodule_firmware(checksum);
create index kernelmodule_license_checksum_index on kernelmodule_license(checksum);
create index kernelmodule_parameter_checksum_index on kernelmodule_parameter(checksum);
create index kernelmodule_parameter_description_checksum_index on kernelmodule_parameter_description(checksum);
create index kernelmodule_version_checksum_index on kernelmodule_version(checksum);
create table if not exists rpm(rpmname text, checksum text, downloadurl text);
create index rpm_checksum_index on rpm(checksum);
create index rpm_rpmname_index on rpm(rpmname);
create table if not exists archivealias(checksum text, archivename text, origin text, downloadurl text);
create index archivealias_checksum_index on archivealias(checksum);
create table if not exists misc(checksum text, name text);
create index misc_checksum_index on misc(checksum);
create index misc_name_index on misc(name);
create table if not exists hashconversion (sha256 text);
create index hashconversion_sha256_index on hashconversion(sha256);
create table if not exists licenses (checksum text, license text, scanner text, version text);
create index license_index on licenses(checksum);
create table if not exists extracted_copyright (checksum text, copyright text, type text, byteoffset int);
create index copyright_index on extracted_copyright(checksum);
create index copyright_type_index on extracted_copyright(copyright, type);
create table if not exists security_cert(checksum text, securitybug text, linenumber int, function text, whitelist boolean);
create index security_cert_checksum_index on security_cert(checksum);
create table if not exists security_cve(checksum text, cve text);
create index security_cve_checksum_index on security_cve(checksum);
create table if not exists security_password(hash text, password text);
create index security_password_hash_index on security_cve(checksum);
create table if not exists renames (originalname text, newname text);
create index renames_index on renames (originalname);
create index renames_index on renames (newname);
create table if not exists file(filename text, directory text, package text, packageversion text, source text, distroversion text);
create index file_index on file(filename, directory);
